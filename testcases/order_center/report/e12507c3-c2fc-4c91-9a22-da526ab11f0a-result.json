{"name": "订单列表接口", "status": "broken", "statusDetails": {"message": "TypeError: argument of type 'NoneType' is not iterable", "trace": "self = <testcases.order_center.test_order.TestOrder object at 0x0000022A0508C5E0>\ndata = {'case_info': {'params': None}, 'request_info': {'case_title': '订单列表接口', 'headers': {'Content-Type': 'application/json'}, 'method': 'GET', 'url': '/orders/'}}\n\n    @pytest.mark.parametrize(\"data\", YamlUtil().extract_case(\"orders_center.yaml\", 'order_list'))\n    def test_order_list(self, data):\n>       ApiService().handle_case(data)\n\ntest_order.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\core\\ApiService.py:29: in handle_case\n    AssertUtil().validate_response(res, validate)\n..\\..\\utils\\AssertUtil.py:92: in validate_response\n    self.contains(actual_value, expect_value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncheck_value = None, expect_value = 1\n\n    @staticmethod\n    def contains(check_value, expect_value):\n        \"\"\"包含\"\"\"\n>       assert expect_value in check_value, f'{expect_value} in {check_value})'\nE       TypeError: argument of type 'NoneType' is not iterable\n\n..\\..\\utils\\AssertUtil.py:39: TypeError"}, "attachments": [{"name": "log", "source": "e16f4525-c3da-4c0a-a7b2-0d83e17c4cca-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "c0e8a2d9-4f4b-4af7-8f60-95f02fcca1cf-attachment.txt", "type": "text/plain"}], "start": 1703564034285, "stop": 1703564034367, "uuid": "69c911e1-9591-4a03-ba8d-43046f529c6c", "historyId": "a499134268ffc85d3c680f9e35714699", "testCaseId": "223edf9009fd78277f75afc4aa9bfa54", "fullName": "testcases.order_center.test_order.TestOrder#test_order_list", "labels": [{"name": "feature", "value": "用户订单模块"}, {"name": "parentSuite", "value": "testcases.order_center"}, {"name": "suite", "value": "test_order"}, {"name": "subSuite", "value": "TestOrder"}, {"name": "host", "value": "14900K"}, {"name": "thread", "value": "28368-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.order_center.test_order"}]}